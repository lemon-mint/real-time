{"mappings":"AAAA,MAAMA,OAASC,SAASC,eAAe,QACjCC,SAAWF,SAASC,eAAe,SACnCE,SAAWH,SAASC,eAAe,aACnCG,KAAOJ,SAASC,eAAe,UAErC,IAAII,WAAqB,EACrBC,YAAsB,GACtBC,YAAqB,IAAIC,MAAOC,UAAYC,YAAYC,MACxDC,aAAsB,IAAIJ,MAAOK,iBAEjCC,WAAqB,gCAEcC,iBACrC,OAAOL,YAAYC,MAAQJ,WAAaF,oBAGjCW,aACP,MAAMC,EAAOF,iBACPG,EAAO,IAAIV,KAAKS,GACtBL,YAAcM,EAAKL,iBACfd,OAAOoB,cAAgBP,cACzBb,OAAOoB,YAAcP,aAGnBN,aACFH,SAASiB,QAAS,EAClBlB,SAASmB,UAAYf,aACXH,SAASiB,SACnBjB,SAASiB,QAAS,GAGhBhB,KAAKe,cAAgBL,aACvBV,KAAKe,YAAcL,YAGrBQ,sBAAsBN,qBAKfO,cAAcC,GACrBnB,YAA0BmB,iBAGbC,eACb,MAAMC,EAAKX,iBACLY,QAAiBC,MAAM,SACvBC,EAAKd,iBACLe,QAAaH,EAASG,OAK5B,OAJWA,EAAKC,GAGKL,EAFVI,EAAKE,GAEeH,GAAM,iBAIxBI,MAAMC,GACnB,OAAO,IAAIC,SAASC,GAAYC,WAAWD,EAASF,oBAGvCI,SAASC,GAAkB,SAClCd,eAEN,IAAID,EAAS,EAEb,IAAK,IAAIgB,EAAI,EAAGA,EADgB,GACaA,IAC3ChB,SAAgBC,eAChBX,WAAa,YAAUU,GAAIgB,EAAM,IAAEC,QAAM,GAAA,WACnCR,MAAM,IAEdT,GANgC,GAQhCkB,QAAQC,IAAI,WAAanB,GACzBD,cAAcC,GACdV,YAAmBC,kBAAmB,IAAIP,MAAOC,WAAWgC,QAAQ,GAAK,KACrEF,GACFF,YAAUO,gBACFN,UAAS,KACd,oBAIQO,aACPpB,qBACAQ,MAAM,WACNK,UAAS,SACTL,MAAM,WACNK,UAAS,GAjDjBhB,sBAAsBN,YAoDtB6B,OAAOC","sources":["src/index.ts"],"sourcesContent":["const timeH1 = document.getElementById(\"time\");\r\nconst errorPre = document.getElementById(\"error\");\r\nconst errordiv = document.getElementById(\"error-div\");\r\nconst stat = document.getElementById(\"status\");\r\n\r\nlet timeOffset: number = 0;\r\nlet errorString: string = \"\";\r\nlet DOMTimeOff: number = new Date().getTime() - performance.now();\r\nlet displayTime: string = new Date().toLocaleString();\r\n\r\nlet statusText: string = \"잠시 기다려주세요, 동기화 중입니다.\";\r\n\r\nfunction getCurrentTime() {\r\n  return performance.now() + DOMTimeOff + timeOffset;\r\n}\r\n\r\nfunction updateTime() {\r\n  const time = getCurrentTime();\r\n  const date = new Date(time);\r\n  displayTime = date.toLocaleString();\r\n  if (timeH1.textContent !== displayTime) {\r\n    timeH1.textContent = displayTime;\r\n  }\r\n\r\n  if (errorString) {\r\n    errordiv.hidden = false;\r\n    errorPre.innerText = errorString;\r\n  } else if (!errordiv.hidden) {\r\n    errordiv.hidden = true;\r\n  }\r\n\r\n  if (stat.textContent !== statusText) {\r\n    stat.textContent = statusText;\r\n  }\r\n\r\n  requestAnimationFrame(updateTime);\r\n}\r\n\r\nrequestAnimationFrame(updateTime);\r\n\r\nfunction setTimeOffset(offset: number) {\r\n  timeOffset = timeOffset + offset;\r\n}\r\n\r\nasync function getServerOff(): Promise<number> {\r\n  const t0 = getCurrentTime();\r\n  const response = await fetch(\"/time\");\r\n  const t3 = getCurrentTime();\r\n  const json = await response.json();\r\n  const t1 = json.t1;\r\n  const t2 = json.t2;\r\n\r\n  const offset = (t1 - t0 + t2 - t3) / 2;\r\n  return offset;\r\n}\r\n\r\nasync function sleep(t: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, t));\r\n}\r\n\r\nasync function syncTime(repeat: boolean = false) {\r\n  await getServerOff(); // Preheat\r\n\r\n  let offset = 0;\r\n  const TIME_SYNC_MEASURE_COUNT = 10;\r\n  for (let i = 0; i < TIME_SYNC_MEASURE_COUNT; i++) {\r\n    offset += await getServerOff();\r\n    statusText = \"동기화중... \" + (offset/(i+1)).toFixed(5) + \"ms\";\r\n    await sleep(25);\r\n  }\r\n  offset /= TIME_SYNC_MEASURE_COUNT;\r\n\r\n  console.log(\"offset: \" + offset);\r\n  setTimeOffset(offset);\r\n  statusText = \"\" + (getCurrentTime() - new Date().getTime()).toFixed(5) + \"ms\";\r\n  if (repeat) {\r\n    setTimeout(async () => {\r\n      await syncTime(true);\r\n    }, 1000 * 30);\r\n  }\r\n}\r\n\r\nasync function main() {\r\n  await getServerOff();\r\n  await sleep(500);\r\n  await syncTime(false);\r\n  await sleep(1000);\r\n  await syncTime(true);\r\n}\r\n\r\nmain().then();\r\n"],"names":["timeH1","document","getElementById","errorPre","errordiv","stat","timeOffset","errorString","DOMTimeOff","Date","getTime","performance","now","displayTime","toLocaleString","statusText","getCurrentTime","updateTime","time","date","textContent","hidden","innerText","requestAnimationFrame","setTimeOffset","offset","getServerOff","t0","response","fetch","t3","json","t1","t2","sleep","t","Promise","resolve","setTimeout","syncTime","repeat","i","toFixed","console","log","async","main","then"],"version":3,"file":"index.ff22f1a9.js.map"}